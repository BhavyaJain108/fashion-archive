{"ast":null,"code":"var _jsxFileName = \"/Users/bhavyajain/Code/fashion_archive/web_ui/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport SeasonsPanel from './components/SeasonsPanel';\nimport CollectionsPanel from './components/CollectionsPanel';\nimport ImageViewerPanel from './components/ImageViewerPanel';\nimport VideoWindow from './components/VideoModal';\nimport MenuBar from './components/MenuBar';\nimport FavouritesPanel from './components/FavouritesPanel';\nimport MyBrandsPanel from './components/MyBrandsPanel';\nimport LoginModal from './components/LoginModal';\nimport { FashionArchiveAPI } from './services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  console.log('🔍 App.js function called - component loading');\n\n  // Authentication State\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [sessionToken, setSessionToken] = useState(null);\n  const [showLoginModal, setShowLoginModal] = useState(true);\n\n  // Page State\n  const [currentPage, setCurrentPage] = useState('high-fashion'); // 'high-fashion', 'favourites', or 'my-brands'\n\n  // View State - specific to each page\n  const [currentView, setCurrentView] = useState('standard'); // high-fashion: 'standard', favourites: 'view-all'\n\n  // UI State - matches tkinter version exactly\n  const [column2Activated, setColumn2Activated] = useState(false);\n  const [column3Activated, setColumn3Activated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Data State\n  const [seasons, setSeasons] = useState([]);\n  const [selectedSeason, setSelectedSeason] = useState(null);\n  const [collections, setCollections] = useState([]);\n  const [selectedCollection, setSelectedCollection] = useState(null);\n  const [currentImages, setCurrentImages] = useState([]);\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n\n  // Streaming state (matches tkinter stream_collections_update)\n  const [collectionsLoading, setCollectionsLoading] = useState(false);\n  const [loadingProgress, setLoadingProgress] = useState({\n    page: 0,\n    total: 0\n  });\n\n  // UI Mode State\n  const [galleryMode, setGalleryMode] = useState(false);\n  const [zoomMode, setZoomMode] = useState(0); // 0=off, 1=2x, 2=3x\n  const [isDownloading, setIsDownloading] = useState(false);\n\n  // Video State\n  const [videoModalOpen, setVideoModalOpen] = useState(false);\n  const [currentVideoPath, setCurrentVideoPath] = useState(null);\n  const [videoDownloadState, setVideoDownloadState] = useState('none'); // 'none', 'loading', 'ready'\n\n  // Check for existing session on startup\n  useEffect(() => {\n    console.log('🔍 App.js useEffect running - checking existing session');\n    const checkExistingSession = async () => {\n      const savedToken = localStorage.getItem('fashionArchiveToken');\n      const savedUser = localStorage.getItem('fashionArchiveUser');\n      console.log('🔍 Saved token:', savedToken ? 'exists' : 'none');\n      console.log('🔍 Saved user:', savedUser ? 'exists' : 'none');\n      if (savedToken && savedUser) {\n        try {\n          // Validate the saved session\n          const response = await fetch('http://localhost:8081/api/auth/validate', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              session_token: savedToken\n            })\n          });\n          const data = await response.json();\n          if (data.success && data.valid) {\n            // Session is still valid\n            setCurrentUser(JSON.parse(savedUser));\n            setSessionToken(savedToken);\n            setIsAuthenticated(true);\n            setShowLoginModal(false);\n\n            // Load seasons in background\n            loadSeasonsInBackground();\n          } else {\n            // Session expired, clear storage\n            localStorage.removeItem('fashionArchiveToken');\n            localStorage.removeItem('fashionArchiveUser');\n            setShowLoginModal(true);\n          }\n        } catch (error) {\n          console.error('Session validation failed:', error);\n          localStorage.removeItem('fashionArchiveToken');\n          localStorage.removeItem('fashionArchiveUser');\n          setShowLoginModal(true);\n        }\n      } else {\n        // No saved session, show login\n        console.log('🔍 No saved session, showing login modal');\n        setShowLoginModal(true);\n      }\n    };\n    checkExistingSession();\n  }, []);\n\n  // Load seasons in background after authentication\n  const loadSeasonsInBackground = async () => {\n    try {\n      setIsLoading(true);\n      const seasonsData = await FashionArchiveAPI.getSeasons();\n      setSeasons(seasonsData);\n      setIsLoading(false);\n    } catch (error) {\n      console.error('Error loading seasons:', error);\n      setIsLoading(false);\n    }\n  };\n\n  // Handle successful login\n  const handleLogin = (user, token) => {\n    setCurrentUser(user);\n    setSessionToken(token);\n    setIsAuthenticated(true);\n    setShowLoginModal(false);\n\n    // Load seasons after login\n    loadSeasonsInBackground();\n  };\n\n  // Handle logout\n  const handleLogout = async () => {\n    try {\n      if (sessionToken) {\n        await fetch('http://localhost:8081/api/auth/logout', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            session_token: sessionToken\n          })\n        });\n      }\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      // Clear local state and storage\n      localStorage.removeItem('fashionArchiveToken');\n      localStorage.removeItem('fashionArchiveUser');\n      setCurrentUser(null);\n      setSessionToken(null);\n      setIsAuthenticated(false);\n      setShowLoginModal(true);\n\n      // Reset app state\n      setSeasons([]);\n      setSelectedSeason(null);\n      setCollections([]);\n      setSelectedCollection(null);\n      setCurrentImages([]);\n      setColumn2Activated(false);\n      setColumn3Activated(false);\n    }\n  };\n\n  // Handle season selection - show column 2 (collections) with progress tracking\n  const handleSeasonSelect = async season => {\n    setSelectedSeason(season);\n    setColumn2Activated(true);\n    setCollectionsLoading(true);\n    setCollections([]);\n    setLoadingProgress({\n      page: 0,\n      total: 0\n    });\n    try {\n      // Load collections with progress tracking but show results all at once when complete\n      const finalCollections = await FashionArchiveAPI.streamCollections(season.url, streamData => {\n        if (streamData.error) {\n          console.error('Stream error:', streamData.error);\n          setCollectionsLoading(false);\n          return;\n        }\n        if (!streamData.complete) {\n          // Update progress only (don't show partial results)\n          setLoadingProgress({\n            page: streamData.page,\n            total: streamData.total_collections\n          });\n        } else {\n          // Show final complete data all at once\n          if (streamData.collections) {\n            setCollections(streamData.collections);\n          }\n          setCollectionsLoading(false);\n        }\n      });\n\n      // Ensure we have final data\n      if (finalCollections) {\n        setCollections(finalCollections);\n      }\n    } catch (error) {\n      console.error('Error loading collections:', error);\n      setCollections([]);\n    } finally {\n      setCollectionsLoading(false);\n    }\n  };\n\n  // Handle designer/collection selection - show column 3 (images)\n  const handleCollectionSelect = async collection => {\n    // Prevent multiple simultaneous downloads (matches tkinter)\n    if (isDownloading) {\n      console.log('Download already in progress, ignoring selection');\n      return;\n    }\n\n    // Check if same collection (matches tkinter duplicate prevention)\n    if (selectedCollection && selectedCollection.url === collection.url) {\n      console.log('Same collection selected, ignoring duplicate request');\n      return;\n    }\n    setSelectedCollection(collection);\n    setColumn3Activated(true);\n    setIsDownloading(true);\n\n    // Clear current video state (matches tkinter)\n    setCurrentVideoPath(null);\n    setVideoDownloadState('none');\n    if (videoModalOpen) {\n      setVideoModalOpen(false);\n    }\n    try {\n      // Clean up previous downloads first (matches tkinter cleanup_previous_downloads)\n      await FashionArchiveAPI.cleanupDownloads();\n\n      // Clear current images immediately (matches tkinter)\n      setCurrentImages([]);\n      setCurrentImageIndex(0);\n\n      // Download images (matches tkinter behavior)\n      const imageData = await FashionArchiveAPI.downloadImages(collection);\n      setCurrentImages(imageData.imagePaths || []);\n      setCurrentImageIndex(0);\n\n      // Set video state to ready for download (no automatic download)\n      setVideoDownloadState('ready');\n    } catch (error) {\n      console.error('Error downloading images:', error);\n      setCurrentImages([]);\n    } finally {\n      setIsDownloading(false);\n    }\n  };\n\n  // Image navigation (matches tkinter behavior)\n  const handlePrevImage = () => {\n    if (currentImages.length > 0) {\n      const newIndex = currentImageIndex > 0 ? currentImageIndex - 1 : currentImages.length - 1; // Wrap to last\n      setCurrentImageIndex(newIndex);\n    }\n  };\n  const handleNextImage = () => {\n    if (currentImages.length > 0) {\n      const newIndex = currentImageIndex < currentImages.length - 1 ? currentImageIndex + 1 : 0; // Wrap to first\n      setCurrentImageIndex(newIndex);\n    }\n  };\n\n  // Toggle gallery/single view (matches tkinter)\n  const handleToggleGallery = () => {\n    setGalleryMode(!galleryMode);\n  };\n\n  // Cycle zoom mode (matches tkinter)\n  const handleCycleZoom = () => {\n    setZoomMode((zoomMode + 1) % 3);\n  };\n\n  // Handle video button click - download or toggle video\n  const handleVideoButton = async () => {\n    if (videoDownloadState === 'ready') {\n      // Start download\n      setVideoDownloadState('loading');\n      try {\n        const videoPath = await FashionArchiveAPI.downloadVideo(selectedCollection);\n        if (videoPath) {\n          setCurrentVideoPath(videoPath);\n          setVideoDownloadState('downloaded');\n        } else {\n          setVideoDownloadState('ready'); // Reset on failure\n        }\n      } catch (error) {\n        console.error('Video download failed:', error);\n        setVideoDownloadState('ready'); // Reset on failure\n      }\n    } else if (videoDownloadState === 'downloaded') {\n      // Toggle video modal\n      setVideoModalOpen(!videoModalOpen);\n    }\n  };\n\n  // Keyboard navigation (matches tkinter)\n  useEffect(() => {\n    const handleKeyPress = e => {\n      if (e.key === 'ArrowLeft') {\n        handlePrevImage();\n      } else if (e.key === 'ArrowRight') {\n        handleNextImage();\n      } else if (e.key === 'Escape' && videoModalOpen) {\n        setVideoModalOpen(false);\n      }\n    };\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [currentImageIndex, currentImages.length, videoModalOpen]);\n\n  // Page switching handlers\n  const handlePageSwitch = page => {\n    setCurrentPage(page);\n    // Set default view for the page\n    if (page === 'high-fashion') {\n      setCurrentView('standard');\n    } else if (page === 'favourites') {\n      setCurrentView('view-all');\n    } else if (page === 'my-brands') {\n      setCurrentView('all-brands');\n    }\n  };\n\n  // View mode switching handlers\n  const handleViewChange = viewMode => {\n    setCurrentView(viewMode);\n  };\n  console.log('🔍 App.js render - isLoading:', isLoading, 'showLoginModal:', showLoginModal, 'isAuthenticated:', isAuthenticated);\n  if (isLoading) {\n    console.log('🔍 Showing loading screen');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mac-label\",\n          children: \"Loading Fashion Week Archive...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"columns-container\",\n    children: [/*#__PURE__*/_jsxDEV(MenuBar, {\n      currentPage: currentPage,\n      onPageSwitch: handlePageSwitch,\n      currentView: currentView,\n      onViewChange: handleViewChange,\n      currentUser: currentUser,\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mac-title-bar\",\n      style: {\n        position: 'fixed',\n        top: '20px',\n        left: 0,\n        right: 0,\n        zIndex: 100\n      },\n      children: \"Fashion Week Archive Browser\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 7\n    }, this), currentPage === 'high-fashion' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        width: '100%',\n        height: '100vh',\n        paddingTop: '40px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        style: {\n          width: '300px'\n        },\n        children: /*#__PURE__*/_jsxDEV(SeasonsPanel, {\n          seasons: seasons,\n          selectedSeason: selectedSeason,\n          onSeasonSelect: handleSeasonSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 11\n      }, this), column2Activated && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        style: {\n          width: '400px'\n        },\n        children: /*#__PURE__*/_jsxDEV(CollectionsPanel, {\n          collections: collections,\n          selectedCollection: selectedCollection,\n          onCollectionSelect: handleCollectionSelect,\n          seasonTitle: (selectedSeason === null || selectedSeason === void 0 ? void 0 : selectedSeason.name) || '',\n          isLoading: collectionsLoading,\n          loadingProgress: loadingProgress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 13\n      }, this), column3Activated && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        style: {\n          flex: '1 1 auto',\n          minWidth: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(ImageViewerPanel, {\n          images: currentImages,\n          currentImageIndex: currentImageIndex,\n          galleryMode: galleryMode,\n          zoomMode: zoomMode,\n          isDownloading: isDownloading,\n          videoDownloadState: videoDownloadState,\n          designerName: (selectedCollection === null || selectedCollection === void 0 ? void 0 : selectedCollection.designer) || '',\n          selectedSeason: selectedSeason,\n          selectedCollection: selectedCollection,\n          onPrevImage: handlePrevImage,\n          onNextImage: handleNextImage,\n          onToggleGallery: handleToggleGallery,\n          onCycleZoom: handleCycleZoom,\n          onVideoButton: handleVideoButton,\n          onImageSelect: setCurrentImageIndex\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 9\n    }, this) : currentPage === 'favourites' ? /*#__PURE__*/_jsxDEV(FavouritesPanel, {\n      currentView: currentView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 9\n    }, this) : currentPage === 'my-brands' ? /*#__PURE__*/_jsxDEV(MyBrandsPanel, {\n      currentView: currentView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(FavouritesPanel, {\n      currentView: currentView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 9\n    }, this), videoModalOpen && currentVideoPath && /*#__PURE__*/_jsxDEV(VideoWindow, {\n      videoPath: currentVideoPath,\n      onClose: () => setVideoModalOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LoginModal, {\n      isOpen: showLoginModal,\n      onLogin: handleLogin,\n      onClose: () => {} // Can't close without logging in\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 361,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"A1u+JrRqZ0dfGIoZhmSgZmTi07M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","SeasonsPanel","CollectionsPanel","ImageViewerPanel","VideoWindow","MenuBar","FavouritesPanel","MyBrandsPanel","LoginModal","FashionArchiveAPI","jsxDEV","_jsxDEV","App","_s","console","log","isAuthenticated","setIsAuthenticated","currentUser","setCurrentUser","sessionToken","setSessionToken","showLoginModal","setShowLoginModal","currentPage","setCurrentPage","currentView","setCurrentView","column2Activated","setColumn2Activated","column3Activated","setColumn3Activated","isLoading","setIsLoading","seasons","setSeasons","selectedSeason","setSelectedSeason","collections","setCollections","selectedCollection","setSelectedCollection","currentImages","setCurrentImages","currentImageIndex","setCurrentImageIndex","collectionsLoading","setCollectionsLoading","loadingProgress","setLoadingProgress","page","total","galleryMode","setGalleryMode","zoomMode","setZoomMode","isDownloading","setIsDownloading","videoModalOpen","setVideoModalOpen","currentVideoPath","setCurrentVideoPath","videoDownloadState","setVideoDownloadState","checkExistingSession","savedToken","localStorage","getItem","savedUser","response","fetch","method","headers","body","JSON","stringify","session_token","data","json","success","valid","parse","loadSeasonsInBackground","removeItem","error","seasonsData","getSeasons","handleLogin","user","token","handleLogout","handleSeasonSelect","season","finalCollections","streamCollections","url","streamData","complete","total_collections","handleCollectionSelect","collection","cleanupDownloads","imageData","downloadImages","imagePaths","handlePrevImage","length","newIndex","handleNextImage","handleToggleGallery","handleCycleZoom","handleVideoButton","videoPath","downloadVideo","handleKeyPress","e","key","window","addEventListener","removeEventListener","handlePageSwitch","handleViewChange","viewMode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onPageSwitch","onViewChange","onLogout","style","position","top","left","right","zIndex","display","width","height","paddingTop","onSeasonSelect","onCollectionSelect","seasonTitle","name","flex","minWidth","images","designerName","designer","onPrevImage","onNextImage","onToggleGallery","onCycleZoom","onVideoButton","onImageSelect","onClose","isOpen","onLogin","_c","$RefreshReg$"],"sources":["/Users/bhavyajain/Code/fashion_archive/web_ui/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport SeasonsPanel from './components/SeasonsPanel';\nimport CollectionsPanel from './components/CollectionsPanel';\nimport ImageViewerPanel from './components/ImageViewerPanel';\nimport VideoWindow from './components/VideoModal';\nimport MenuBar from './components/MenuBar';\nimport FavouritesPanel from './components/FavouritesPanel';\nimport MyBrandsPanel from './components/MyBrandsPanel';\nimport LoginModal from './components/LoginModal';\nimport { FashionArchiveAPI } from './services/api';\n\nfunction App() {\n  console.log('🔍 App.js function called - component loading');\n  \n  // Authentication State\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [sessionToken, setSessionToken] = useState(null);\n  const [showLoginModal, setShowLoginModal] = useState(true);\n  \n  // Page State\n  const [currentPage, setCurrentPage] = useState('high-fashion'); // 'high-fashion', 'favourites', or 'my-brands'\n  \n  // View State - specific to each page\n  const [currentView, setCurrentView] = useState('standard'); // high-fashion: 'standard', favourites: 'view-all'\n  \n  // UI State - matches tkinter version exactly\n  const [column2Activated, setColumn2Activated] = useState(false);\n  const [column3Activated, setColumn3Activated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  \n  // Data State\n  const [seasons, setSeasons] = useState([]);\n  const [selectedSeason, setSelectedSeason] = useState(null);\n  const [collections, setCollections] = useState([]);\n  const [selectedCollection, setSelectedCollection] = useState(null);\n  const [currentImages, setCurrentImages] = useState([]);\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  \n  // Streaming state (matches tkinter stream_collections_update)\n  const [collectionsLoading, setCollectionsLoading] = useState(false);\n  const [loadingProgress, setLoadingProgress] = useState({ page: 0, total: 0 });\n  \n  // UI Mode State\n  const [galleryMode, setGalleryMode] = useState(false);\n  const [zoomMode, setZoomMode] = useState(0); // 0=off, 1=2x, 2=3x\n  const [isDownloading, setIsDownloading] = useState(false);\n  \n  // Video State\n  const [videoModalOpen, setVideoModalOpen] = useState(false);\n  const [currentVideoPath, setCurrentVideoPath] = useState(null);\n  const [videoDownloadState, setVideoDownloadState] = useState('none'); // 'none', 'loading', 'ready'\n\n  // Check for existing session on startup\n  useEffect(() => {\n    console.log('🔍 App.js useEffect running - checking existing session');\n    const checkExistingSession = async () => {\n      const savedToken = localStorage.getItem('fashionArchiveToken');\n      const savedUser = localStorage.getItem('fashionArchiveUser');\n      console.log('🔍 Saved token:', savedToken ? 'exists' : 'none');\n      console.log('🔍 Saved user:', savedUser ? 'exists' : 'none');\n      \n      if (savedToken && savedUser) {\n        try {\n          // Validate the saved session\n          const response = await fetch('http://localhost:8081/api/auth/validate', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ session_token: savedToken }),\n          });\n          \n          const data = await response.json();\n          \n          if (data.success && data.valid) {\n            // Session is still valid\n            setCurrentUser(JSON.parse(savedUser));\n            setSessionToken(savedToken);\n            setIsAuthenticated(true);\n            setShowLoginModal(false);\n            \n            // Load seasons in background\n            loadSeasonsInBackground();\n          } else {\n            // Session expired, clear storage\n            localStorage.removeItem('fashionArchiveToken');\n            localStorage.removeItem('fashionArchiveUser');\n            setShowLoginModal(true);\n          }\n        } catch (error) {\n          console.error('Session validation failed:', error);\n          localStorage.removeItem('fashionArchiveToken');\n          localStorage.removeItem('fashionArchiveUser');\n          setShowLoginModal(true);\n        }\n      } else {\n        // No saved session, show login\n        console.log('🔍 No saved session, showing login modal');\n        setShowLoginModal(true);\n      }\n    };\n    \n    checkExistingSession();\n  }, []);\n\n  // Load seasons in background after authentication\n  const loadSeasonsInBackground = async () => {\n    try {\n      setIsLoading(true);\n      const seasonsData = await FashionArchiveAPI.getSeasons();\n      setSeasons(seasonsData);\n      setIsLoading(false);\n    } catch (error) {\n      console.error('Error loading seasons:', error);\n      setIsLoading(false);\n    }\n  };\n\n  // Handle successful login\n  const handleLogin = (user, token) => {\n    setCurrentUser(user);\n    setSessionToken(token);\n    setIsAuthenticated(true);\n    setShowLoginModal(false);\n    \n    // Load seasons after login\n    loadSeasonsInBackground();\n  };\n\n  // Handle logout\n  const handleLogout = async () => {\n    try {\n      if (sessionToken) {\n        await fetch('http://localhost:8081/api/auth/logout', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ session_token: sessionToken }),\n        });\n      }\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      // Clear local state and storage\n      localStorage.removeItem('fashionArchiveToken');\n      localStorage.removeItem('fashionArchiveUser');\n      setCurrentUser(null);\n      setSessionToken(null);\n      setIsAuthenticated(false);\n      setShowLoginModal(true);\n      \n      // Reset app state\n      setSeasons([]);\n      setSelectedSeason(null);\n      setCollections([]);\n      setSelectedCollection(null);\n      setCurrentImages([]);\n      setColumn2Activated(false);\n      setColumn3Activated(false);\n    }\n  };\n\n  // Handle season selection - show column 2 (collections) with progress tracking\n  const handleSeasonSelect = async (season) => {\n    setSelectedSeason(season);\n    setColumn2Activated(true);\n    setCollectionsLoading(true);\n    setCollections([]);\n    setLoadingProgress({ page: 0, total: 0 });\n    \n    try {\n      // Load collections with progress tracking but show results all at once when complete\n      const finalCollections = await FashionArchiveAPI.streamCollections(\n        season.url,\n        (streamData) => {\n          if (streamData.error) {\n            console.error('Stream error:', streamData.error);\n            setCollectionsLoading(false);\n            return;\n          }\n          \n          if (!streamData.complete) {\n            // Update progress only (don't show partial results)\n            setLoadingProgress({\n              page: streamData.page,\n              total: streamData.total_collections\n            });\n          } else {\n            // Show final complete data all at once\n            if (streamData.collections) {\n              setCollections(streamData.collections);\n            }\n            setCollectionsLoading(false);\n          }\n        }\n      );\n      \n      // Ensure we have final data\n      if (finalCollections) {\n        setCollections(finalCollections);\n      }\n    } catch (error) {\n      console.error('Error loading collections:', error);\n      setCollections([]);\n    } finally {\n      setCollectionsLoading(false);\n    }\n  };\n\n  // Handle designer/collection selection - show column 3 (images)\n  const handleCollectionSelect = async (collection) => {\n    // Prevent multiple simultaneous downloads (matches tkinter)\n    if (isDownloading) {\n      console.log('Download already in progress, ignoring selection');\n      return;\n    }\n    \n    // Check if same collection (matches tkinter duplicate prevention)\n    if (selectedCollection && selectedCollection.url === collection.url) {\n      console.log('Same collection selected, ignoring duplicate request');\n      return;\n    }\n    \n    setSelectedCollection(collection);\n    setColumn3Activated(true);\n    setIsDownloading(true);\n    \n    // Clear current video state (matches tkinter)\n    setCurrentVideoPath(null);\n    setVideoDownloadState('none');\n    if (videoModalOpen) {\n      setVideoModalOpen(false);\n    }\n    \n    try {\n      // Clean up previous downloads first (matches tkinter cleanup_previous_downloads)\n      await FashionArchiveAPI.cleanupDownloads();\n      \n      // Clear current images immediately (matches tkinter)\n      setCurrentImages([]);\n      setCurrentImageIndex(0);\n      \n      // Download images (matches tkinter behavior)\n      const imageData = await FashionArchiveAPI.downloadImages(collection);\n      setCurrentImages(imageData.imagePaths || []);\n      setCurrentImageIndex(0);\n      \n      // Set video state to ready for download (no automatic download)\n      setVideoDownloadState('ready');\n        \n    } catch (error) {\n      console.error('Error downloading images:', error);\n      setCurrentImages([]);\n    } finally {\n      setIsDownloading(false);\n    }\n  };\n\n  // Image navigation (matches tkinter behavior)\n  const handlePrevImage = () => {\n    if (currentImages.length > 0) {\n      const newIndex = currentImageIndex > 0 \n        ? currentImageIndex - 1 \n        : currentImages.length - 1; // Wrap to last\n      setCurrentImageIndex(newIndex);\n    }\n  };\n\n  const handleNextImage = () => {\n    if (currentImages.length > 0) {\n      const newIndex = currentImageIndex < currentImages.length - 1\n        ? currentImageIndex + 1\n        : 0; // Wrap to first\n      setCurrentImageIndex(newIndex);\n    }\n  };\n\n  // Toggle gallery/single view (matches tkinter)\n  const handleToggleGallery = () => {\n    setGalleryMode(!galleryMode);\n  };\n\n  // Cycle zoom mode (matches tkinter)\n  const handleCycleZoom = () => {\n    setZoomMode((zoomMode + 1) % 3);\n  };\n\n  // Handle video button click - download or toggle video\n  const handleVideoButton = async () => {\n    if (videoDownloadState === 'ready') {\n      // Start download\n      setVideoDownloadState('loading');\n      try {\n        const videoPath = await FashionArchiveAPI.downloadVideo(selectedCollection);\n        if (videoPath) {\n          setCurrentVideoPath(videoPath);\n          setVideoDownloadState('downloaded');\n        } else {\n          setVideoDownloadState('ready'); // Reset on failure\n        }\n      } catch (error) {\n        console.error('Video download failed:', error);\n        setVideoDownloadState('ready'); // Reset on failure\n      }\n    } else if (videoDownloadState === 'downloaded') {\n      // Toggle video modal\n      setVideoModalOpen(!videoModalOpen);\n    }\n  };\n\n  // Keyboard navigation (matches tkinter)\n  useEffect(() => {\n    const handleKeyPress = (e) => {\n      if (e.key === 'ArrowLeft') {\n        handlePrevImage();\n      } else if (e.key === 'ArrowRight') {\n        handleNextImage();\n      } else if (e.key === 'Escape' && videoModalOpen) {\n        setVideoModalOpen(false);\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [currentImageIndex, currentImages.length, videoModalOpen]);\n\n  // Page switching handlers\n  const handlePageSwitch = (page) => {\n    setCurrentPage(page);\n    // Set default view for the page\n    if (page === 'high-fashion') {\n      setCurrentView('standard');\n    } else if (page === 'favourites') {\n      setCurrentView('view-all');\n    } else if (page === 'my-brands') {\n      setCurrentView('all-brands');\n    }\n  };\n\n  // View mode switching handlers\n  const handleViewChange = (viewMode) => {\n    setCurrentView(viewMode);\n  };\n\n  console.log('🔍 App.js render - isLoading:', isLoading, 'showLoginModal:', showLoginModal, 'isAuthenticated:', isAuthenticated);\n\n  if (isLoading) {\n    console.log('🔍 Showing loading screen');\n    return (\n      <div className=\"columns-container\">\n        <div className=\"loading\">\n          <div className=\"mac-label\">Loading Fashion Week Archive...</div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"columns-container\">\n      {/* Menu Bar - matches tkinter menu system */}\n      <MenuBar \n        currentPage={currentPage}\n        onPageSwitch={handlePageSwitch}\n        currentView={currentView}\n        onViewChange={handleViewChange}\n        currentUser={currentUser}\n        onLogout={handleLogout}\n      />\n      \n      {/* Title Bar - matches tkinter window title */}\n      <div className=\"mac-title-bar\" style={{ \n        position: 'fixed', \n        top: '20px', \n        left: 0, \n        right: 0, \n        zIndex: 100 \n      }}>\n        Fashion Week Archive Browser\n      </div>\n\n      {/* Main Content - offset by menu and title bars */}\n      {currentPage === 'high-fashion' ? (\n        <div style={{ display: 'flex', width: '100%', height: '100vh', paddingTop: '40px' }}>\n          \n          {/* Column 1: Seasons (Always visible) */}\n          <div className=\"column\" style={{ width: '300px' }}>\n            <SeasonsPanel \n              seasons={seasons}\n              selectedSeason={selectedSeason}\n              onSeasonSelect={handleSeasonSelect}\n            />\n          </div>\n\n          {/* Column 2: Collections (Visible after season selection) */}\n          {column2Activated && (\n            <div className=\"column\" style={{ width: '400px' }}>\n              <CollectionsPanel \n                collections={collections}\n                selectedCollection={selectedCollection}\n                onCollectionSelect={handleCollectionSelect}\n                seasonTitle={selectedSeason?.name || ''}\n                isLoading={collectionsLoading}\n                loadingProgress={loadingProgress}\n              />\n            </div>\n          )}\n\n          {/* Column 3: Image Viewer (Visible after collection selection) */}\n          {column3Activated && (\n            <div className=\"column\" style={{ flex: '1 1 auto', minWidth: 0 }}>\n              <ImageViewerPanel \n                images={currentImages}\n                currentImageIndex={currentImageIndex}\n                galleryMode={galleryMode}\n                zoomMode={zoomMode}\n                isDownloading={isDownloading}\n                videoDownloadState={videoDownloadState}\n                designerName={selectedCollection?.designer || ''}\n                selectedSeason={selectedSeason}\n                selectedCollection={selectedCollection}\n                onPrevImage={handlePrevImage}\n                onNextImage={handleNextImage}\n                onToggleGallery={handleToggleGallery}\n                onCycleZoom={handleCycleZoom}\n                onVideoButton={handleVideoButton}\n                onImageSelect={setCurrentImageIndex}\n              />\n            </div>\n          )}\n        </div>\n      ) : currentPage === 'favourites' ? (\n        <FavouritesPanel currentView={currentView} />\n      ) : currentPage === 'my-brands' ? (\n        <MyBrandsPanel currentView={currentView} />\n      ) : (\n        <FavouritesPanel currentView={currentView} />\n      )}\n\n      {/* Video Window - Separate draggable window */}\n      {videoModalOpen && currentVideoPath && (\n        <VideoWindow \n          videoPath={currentVideoPath}\n          onClose={() => setVideoModalOpen(false)}\n        />\n      )}\n\n      {/* Login Modal - Show on startup */}\n      <LoginModal \n        isOpen={showLoginModal}\n        onLogin={handleLogin}\n        onClose={() => {}} // Can't close without logging in\n      />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}