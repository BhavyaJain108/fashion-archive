{"ast":null,"code":"// Fashion Archive API Service\n// Bridges React UI to Python backend maintaining exact same functionality\n\nclass FashionArchiveAPI {\n  // Helper to call Python backend\n  static async callPython(endpoint, data = {}) {\n    try {\n      const response = await fetch(`${this.BASE_URL}${endpoint}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      if (!response.ok) {\n        throw new Error(`API call failed: ${response.statusText}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Python API Error:', error);\n      throw error;\n    }\n  }\n\n  // Load seasons (matches tkinter load_seasons method)\n  static async getSeasons() {\n    const response = await this.callPython('/api/seasons');\n    return response.seasons || [];\n  }\n\n  // Load collections for a season (matches tkinter load_selected_season)\n  static async getCollections(seasonUrl) {\n    const response = await this.callPython('/api/collections', {\n      seasonUrl\n    });\n    return response.collections || [];\n  }\n\n  // Download images for a collection (matches tkinter download_and_display_images)\n  static async downloadImages(collection) {\n    const response = await this.callPython('/api/download-images', {\n      collection\n    });\n    return {\n      imagePaths: response.imagePaths || [],\n      designerName: response.designerName || collection.designer,\n      error: response.error\n    };\n  }\n\n  // Download video for a collection (matches tkinter video download)\n  static async downloadVideo(collection) {\n    try {\n      const response = await this.callPython('/api/download-video', {\n        collection\n      });\n      return response.videoPath || null;\n    } catch (error) {\n      console.error('Video download error:', error);\n      return null;\n    }\n  }\n\n  // Get image file (for display)\n  static getImageUrl(imagePath) {\n    return `${this.BASE_URL}/api/image?path=${encodeURIComponent(imagePath)}`;\n  }\n\n  // Get video file (for playback)\n  static getVideoUrl(videoPath) {\n    return `${this.BASE_URL}/api/video?path=${encodeURIComponent(videoPath)}`;\n  }\n\n  // Clean up downloads (matches tkinter cleanup_previous_downloads)\n  static async cleanupDownloads() {\n    const response = await this.callPython('/api/cleanup');\n    return response.success;\n  }\n\n  // Stream collections as they load (matches tkinter stream_collections_update)\n  static async streamCollections(seasonUrl, onUpdate) {\n    try {\n      const response = await fetch(`${this.BASE_URL}/api/collections-stream`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          seasonUrl\n        })\n      });\n      const reader = response.body.getReader();\n      const decoder = new TextDecoder();\n      while (true) {\n        const {\n          done,\n          value\n        } = await reader.read();\n        if (done) break;\n        const chunk = decoder.decode(value);\n        const lines = chunk.split('\\n');\n        for (const line of lines) {\n          if (line.startsWith('data: ')) {\n            try {\n              const data = JSON.parse(line.slice(6));\n              onUpdate(data);\n              if (data.complete) return data.collections || [];\n            } catch (e) {\n              console.error('Error parsing stream data:', e);\n            }\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Stream error:', error);\n      throw error;\n    }\n  }\n\n  // Video search test (matches tkinter open_video_test)\n  static async testVideoSearch(query) {\n    const response = await this.callPython('/api/video-test', {\n      query\n    });\n    return response;\n  }\n\n  // Get application info (matches tkinter show_about)\n  static async getAboutInfo() {\n    try {\n      const response = await fetch(`${this.BASE_URL}/api/about`);\n      return await response.json();\n    } catch (error) {\n      console.error('About info error:', error);\n      return null;\n    }\n  }\n}\nFashionArchiveAPI.BASE_URL = 'http://localhost:8081';\nexport { FashionArchiveAPI };","map":{"version":3,"names":["FashionArchiveAPI","callPython","endpoint","data","response","fetch","BASE_URL","method","headers","body","JSON","stringify","ok","Error","statusText","json","error","console","getSeasons","seasons","getCollections","seasonUrl","collections","downloadImages","collection","imagePaths","designerName","designer","downloadVideo","videoPath","getImageUrl","imagePath","encodeURIComponent","getVideoUrl","cleanupDownloads","success","streamCollections","onUpdate","reader","getReader","decoder","TextDecoder","done","value","read","chunk","decode","lines","split","line","startsWith","parse","slice","complete","e","testVideoSearch","query","getAboutInfo"],"sources":["/Users/bhavyajain/Code/fashion_archive/web_ui/src/services/api.js"],"sourcesContent":["// Fashion Archive API Service\n// Bridges React UI to Python backend maintaining exact same functionality\n\nclass FashionArchiveAPI {\n  static BASE_URL = 'http://localhost:8081';\n\n  // Helper to call Python backend\n  static async callPython(endpoint, data = {}) {\n    try {\n      const response = await fetch(`${this.BASE_URL}${endpoint}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n      \n      if (!response.ok) {\n        throw new Error(`API call failed: ${response.statusText}`);\n      }\n      \n      return await response.json();\n    } catch (error) {\n      console.error('Python API Error:', error);\n      throw error;\n    }\n  }\n\n  // Load seasons (matches tkinter load_seasons method)\n  static async getSeasons() {\n    const response = await this.callPython('/api/seasons');\n    return response.seasons || [];\n  }\n\n  // Load collections for a season (matches tkinter load_selected_season)\n  static async getCollections(seasonUrl) {\n    const response = await this.callPython('/api/collections', { seasonUrl });\n    return response.collections || [];\n  }\n\n  // Download images for a collection (matches tkinter download_and_display_images)\n  static async downloadImages(collection) {\n    const response = await this.callPython('/api/download-images', { collection });\n    return {\n      imagePaths: response.imagePaths || [],\n      designerName: response.designerName || collection.designer,\n      error: response.error\n    };\n  }\n\n  // Download video for a collection (matches tkinter video download)\n  static async downloadVideo(collection) {\n    try {\n      const response = await this.callPython('/api/download-video', { collection });\n      return response.videoPath || null;\n    } catch (error) {\n      console.error('Video download error:', error);\n      return null;\n    }\n  }\n\n  // Get image file (for display)\n  static getImageUrl(imagePath) {\n    return `${this.BASE_URL}/api/image?path=${encodeURIComponent(imagePath)}`;\n  }\n\n  // Get video file (for playback)\n  static getVideoUrl(videoPath) {\n    return `${this.BASE_URL}/api/video?path=${encodeURIComponent(videoPath)}`;\n  }\n\n  // Clean up downloads (matches tkinter cleanup_previous_downloads)\n  static async cleanupDownloads() {\n    const response = await this.callPython('/api/cleanup');\n    return response.success;\n  }\n\n  // Stream collections as they load (matches tkinter stream_collections_update)\n  static async streamCollections(seasonUrl, onUpdate) {\n    try {\n      const response = await fetch(`${this.BASE_URL}/api/collections-stream`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ seasonUrl }),\n      });\n\n      const reader = response.body.getReader();\n      const decoder = new TextDecoder();\n\n      while (true) {\n        const { done, value } = await reader.read();\n        if (done) break;\n\n        const chunk = decoder.decode(value);\n        const lines = chunk.split('\\n');\n\n        for (const line of lines) {\n          if (line.startsWith('data: ')) {\n            try {\n              const data = JSON.parse(line.slice(6));\n              onUpdate(data);\n              if (data.complete) return data.collections || [];\n            } catch (e) {\n              console.error('Error parsing stream data:', e);\n            }\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Stream error:', error);\n      throw error;\n    }\n  }\n\n  // Video search test (matches tkinter open_video_test)\n  static async testVideoSearch(query) {\n    const response = await this.callPython('/api/video-test', { query });\n    return response;\n  }\n\n  // Get application info (matches tkinter show_about)\n  static async getAboutInfo() {\n    try {\n      const response = await fetch(`${this.BASE_URL}/api/about`);\n      return await response.json();\n    } catch (error) {\n      console.error('About info error:', error);\n      return null;\n    }\n  }\n}\n\nexport { FashionArchiveAPI };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}